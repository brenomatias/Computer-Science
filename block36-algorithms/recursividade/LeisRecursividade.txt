1) Um algoritmo recursivo deve ter um caso base: quando falamos de recursão, devemos sempre lembrar do caso base, pois sem ele nosso algoritmo ficará executando infinitamente.

O caso base é a condição de parada do algoritmo recursivo, ele é o menor subproblema do problema, tornando-o possível de resolver de forma direta/trivial;



2) Um algoritmo recursivo deve mudar o seu estado e se aproximar do caso base: após o início da execução de um algoritmo recursivo, a cada nova chamada a ele mesmo, o seu estado deve se aproximar progressivamente do caso base.


3) Um algoritmo recursivo deve chamar a si mesmo, recursivamente: Essa lei é a própria definição de recursão.



Nome da função e parâmetro:
    Condição de parada

    Chamada de si mesma


1) Declaramos uma função com um parâmetro.
2) Dentro da função criada, definimos qual é a condição de parada da função.
3) A condição de parada faz uma comparação entre o valor da condição com o parâmetro que a função está recebendo. Caso a condição não se satisfaça, a função é chamada novamente com um novo parâmetro. Caso contrário a execução para na condição de parada.